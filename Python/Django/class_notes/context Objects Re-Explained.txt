Passing Variables to Templates

At this point, we’re able to hit our routes, determine whether the method was a GET or a POST, run a method from our controller/view, and then render a template. We’re still missing something: passing data back to our template via something other than request.session.

We should always minimize our use of request.session, limiting it to just a few reference pieces such as the name and ID of a logged-in user.

Not leaning on session demands the ability to use what are called contextual variables.

            from django.shortcuts import render, HttpResponse, redirect
              # The render method that we are importing has two required arguments (request and the template to render), as well as some optional arguments, one of which is context

What is context? It’s just a dictionary that gets unpacked in the template, making all the keys variables that equal the corresponding value.

For example:

            from django.shortcuts import render, HttpResponse, redirect
            def index(request):
            	context = {
            		"email" : "blog@gmail.com",
            		"name" : "mike"
            	}
            	return render(request, "second_app/index.html", context)


              n index.html the context dictionary gets unpacked, and we have access to email and name!

In your ./second_app/index.html template:<html></div><div>  <head></div><div>    <meta charset="utf-8"></div><div>    <title>Document</title></div><div>  </head></div><div>  <body></div><div>    <h1>Hello World!</h1></div><div>      {{email}} and {{name}}</div><div>  </body></div><div> </html></div>


              <html>
                  <head>
                      <meta charset="utf-8">
                      <title>Document</title>
                  </head>
                  <body>
                      <h1>Hello World!</h1>
                      {{email}} and {{name}}
                  </body>
              </html>
